<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

        <!-- 自动扫描 -->
        <context:component-scan base-package="com.asiainfo">
            <!-- 扫描时跳过 @Controller 注解的JAVA类（控制器） -->
            <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>
        
        <!--********************************************配置hibernate********************************************-->

    <!--扫描配置文件(这里指向的是之前配置的那个config.properties)-->
    <context:property-placeholder location="classpath:/my.properties" />

    <!--配置数据源-->
    <bean id="defDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${jdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${jdbc.user}" />   <!--用户名-->
        <property name="password" value="${jdbc.password}" />   <!--密码-->
        <property name="maxPoolSize" value="40" />      <!--最大连接数-->
        <property name="minPoolSize" value="1" />       <!--最小连接数-->
        <property name="initialPoolSize" value="10" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="20" />  <!--最大空闲时间-->
    </bean>
    
    <!--配置源数据数据源-->
    <bean id="srcDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${srcjdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${srcjdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${srcjdbc.user}" />   <!--用户名-->
        <property name="password" value="${srcjdbc.password}" />   <!--密码-->
        <property name="maxPoolSize" value="40" />      <!--最大连接数-->
        <property name="minPoolSize" value="1" />       <!--最小连接数-->
        <property name="initialPoolSize" value="10" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="20" />  <!--最大空闲时间-->
    </bean>
    
    <bean id="dataSourceSwitcher" class="com.asiainfo.datasource.DataSourceSwitcher">
		<property name="targetDataSources">
			<map>
				<entry key="ds1" value-ref="defDataSource"/>
				<entry key="ds2" value-ref="srcDataSource"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="defDataSource"/>
	</bean>

    <!--配置sessionFactory(方法二)，一般都是采取这种方式，比较简单-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--引入数据库配置信息dataSource-->
        <property name="dataSource" >
            <ref bean="dataSourceSwitcher"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> <!--hibernate根据实体自动生成数据库表-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>   <!--指定数据库方言-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>     <!--在控制台显示执行的数据库操作语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>     <!--在控制台显示执行的数据哭操作语句（格式）-->
            </props>
        </property>
        <!--扫描对应对应包下的实体类-->
        <property name="packagesToScan">
            <list>
                <value>com.asiainfo.domain.other</value>
            </list>
        </property>
        <!-- 配置实体扫描,引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
        <!--<property name="mappingDirectoryLocations" value="classpath:com/hnu/scw/model" ></property>-->
    </bean>

    <!--配置hibernate事务-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    
    <!--配置切面通知-->
    <tx:advice id="tx" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 写操作 -->
			<tx:method name="save*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="delete*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="batch*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="new*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="clear*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="toggle*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="execute*" propagation="SUPPORTS" isolation="DEFAULT"/>
			<tx:method name="move*" propagation="SUPPORTS" isolation="DEFAULT"/>
			
			<!-- 读操作 -->
			<tx:method name="load*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
			<tx:method name="find*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
			
			<tx:method name="*" propagation="SUPPORTS" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>
    <!--织入切面管理service中事务-->
    <aop:config >
        <aop:advisor advice-ref="tx" pointcut="execution(* com.asiainfo.service..*.*(..))" order="2"/>
    </aop:config>

</beans>